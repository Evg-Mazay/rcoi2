name: Build project
on: [push]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # unit tests
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest -vv

      # deploy
#      - uses: actions/checkout@v2
#      - uses: akhileshns/heroku-deploy@v3.4.6
#        with:
#          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#          heroku_app_name: "rcoi-2-warranty"
#          heroku_email: "evgenij997@yandex.ru"
#          usedocker: true
#          docker_build_args: |
#            SCRIPT_NAME=warranty_service.py
#
#      - uses: actions/checkout@v2
#      - uses: akhileshns/heroku-deploy@v3.4.6
#        with:
#          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#          heroku_app_name: "rcoi-2-warehouse"
#          heroku_email: "evgenij997@yandex.ru"
#          usedocker: true
#          docker_build_args: |
#            SCRIPT_NAME=warehouse_service.py
#
#      - uses: actions/checkout@v2
#      - uses: akhileshns/heroku-deploy@v3.4.6
#        with:
#          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#          heroku_app_name: "rcoi-2-order"
#          heroku_email: "evgenij997@yandex.ru"
#          usedocker: true
#          docker_build_args: |
#            SCRIPT_NAME=order_service.py

      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "rcoi-2-store"
          heroku_email: "evgenij997@yandex.ru"
          usedocker: true
          docker_build_args: |
            SCRIPT_NAME
        env:
          SCRIPT_NAME: store_service.py
